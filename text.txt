# GitHub Command Cheat Sheet - basic commands

Basic Git Commands
- `git init` - Initialize a new Git repository.
- `git clone <repository-url>` - Clone a repository from GitHub.
- `git status` - Check the status of your working directory.
- `git add <file>` - Stage changes for commit.
- `git add .` - Stage all changes in the current directory.
- `git commit -m "message"` - Commit staged changes with a message.
- `git push` - Push changes to the remote repository.
- `git pull` - Fetch and merge changes from the remote repository.
- `git branch` - List branches in the repository.
- `git branch <branch-name>` - Create a new branch.
- `git checkout <branch-name>` - Switch to a branch.
- `git merge <branch-name>` - Merge a branch into the current branch.

## Working with Remote Repositories
- `git remote -v` - List remote repositories.
- `git remote add <name> <url>` - Add a new remote repository.
- `git push -u origin <branch-name>` - Push a branch and set upstream tracking.
- `git fetch` - Fetch changes from the remote repository.

## Undoing Changes
- `git reset <file>` - Unstage a file.
- `git reset --hard` - Reset working directory and staging area to the last commit.
- `git revert <commit-hash>` - Revert a specific commit.

## Viewing History
- `git log` - View commit history.
- `git log --oneline` - View commit history in a compact format.
- `git diff` - Show changes between commits or working directory.

## Tagging
- `git tag <tag-name>` - Create a new tag.
- `git push origin <tag-name>` - Push a tag to the remote repository.

## Stashing
- `git stash` - Save changes temporarily.
- `git stash apply` - Reapply stashed changes.
- `git stash drop` - Remove a stash.

## Collaboration
- `git fork` - Create a copy of a repository on GitHub.
- `git pull request` - Submit changes for review (via GitHub interface).

## GitHub-Specific Commands
- `gh repo clone <repository>` - Clone a repository using GitHub CLI.
- `gh issue list` - List issues in a repository.
- `gh pr create` - Create a pull request using GitHub CLI.
- `gh auth login` - Authenticate with GitHub CLI.
