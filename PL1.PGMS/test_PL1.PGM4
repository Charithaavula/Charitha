/* Test cases for ORDER_UPDATE program */

/* Test Case 1: Valid Input - Successful Order Insertion */
DECLARE TEST_CASE_1 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('ENTER');
    DECLARE PAYMENT_TYPE CHAR(3) INIT('COD');
    DECLARE ITEM_CODE FIXED DECIMAL(7) INIT(1234567);
    DECLARE CUSTOMER_CODE FIXED DECIMAL(7) INIT(7654321);
    DECLARE ITEM_QTY FIXED DECIMAL(5) INIT(10);

    /* Mock ITEM_MASTER_FILE and CUSTOMER_MASTER_FILE */
    DECLARE ITEM_MASTER_RECORD,
                    2 ITEM_CODE FIXED DECIMAL(7) INIT(1234567),
                    2 ITEM_STOCK_QTY FIXED DECIMAL(5) INIT(20);

    DECLARE CUSTOMER_MASTER_RECORD,
                    2 CUSTOMER_CODE FIXED DECIMAL(7) INIT(7654321);

    /* Expected Output */
    PUT SKIP LIST('ORDER INSERTED SUCCESSFULLY');
END TEST_CASE_1;

/* Test Case 2: Invalid Payment Type */
DECLARE TEST_CASE_2 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('ENTER');
    DECLARE PAYMENT_TYPE CHAR(3) INIT('XYZ');
    DECLARE ITEM_CODE FIXED DECIMAL(7) INIT(1234567);
    DECLARE CUSTOMER_CODE FIXED DECIMAL(7) INIT(7654321);
    DECLARE ITEM_QTY FIXED DECIMAL(5) INIT(10);

    /* Expected Output */
    PUT SKIP LIST('INVALID PAYMENT TYPE');
    PUT SKIP LIST('PLEASE CORRECT THE INPUT.');
END TEST_CASE_2;

/* Test Case 3: Item Code Not Found */
DECLARE TEST_CASE_3 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('ENTER');
    DECLARE PAYMENT_TYPE CHAR(3) INIT('COD');
    DECLARE ITEM_CODE FIXED DECIMAL(7) INIT(9999999); /* Non-existent item code */
    DECLARE CUSTOMER_CODE FIXED DECIMAL(7) INIT(7654321);
    DECLARE ITEM_QTY FIXED DECIMAL(5) INIT(10);

    /* Expected Output */
    PUT SKIP LIST('ITEM CODE NOT FOUND');
    PUT SKIP LIST('PLEASE CORRECT THE INPUT.');
END TEST_CASE_3;

/* Test Case 4: Item Quantity Exceeds Stock */
DECLARE TEST_CASE_4 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('ENTER');
    DECLARE PAYMENT_TYPE CHAR(3) INIT('COD');
    DECLARE ITEM_CODE FIXED DECIMAL(7) INIT(1234567);
    DECLARE CUSTOMER_CODE FIXED DECIMAL(7) INIT(7654321);
    DECLARE ITEM_QTY FIXED DECIMAL(5) INIT(30); /* Exceeds stock quantity */

    /* Mock ITEM_MASTER_FILE */
    DECLARE ITEM_MASTER_RECORD,
                    2 ITEM_CODE FIXED DECIMAL(7) INIT(1234567),
                    2 ITEM_STOCK_QTY FIXED DECIMAL(5) INIT(20);

    /* Expected Output */
    PUT SKIP LIST('ITEM QTY EXCEEDS STOCK');
    PUT SKIP LIST('PLEASE CORRECT THE INPUT.');
END TEST_CASE_4;

/* Test Case 5: Customer Code Not Found */
DECLARE TEST_CASE_5 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('ENTER');
    DECLARE PAYMENT_TYPE CHAR(3) INIT('COD');
    DECLARE ITEM_CODE FIXED DECIMAL(7) INIT(1234567);
    DECLARE CUSTOMER_CODE FIXED DECIMAL(7) INIT(9999999); /* Non-existent customer code */
    DECLARE ITEM_QTY FIXED DECIMAL(5) INIT(10);

    /* Mock ITEM_MASTER_FILE */
    DECLARE ITEM_MASTER_RECORD,
                    2 ITEM_CODE FIXED DECIMAL(7) INIT(1234567),
                    2 ITEM_STOCK_QTY FIXED DECIMAL(5) INIT(20);

    /* Expected Output */
    PUT SKIP LIST('CUSTOMER CODE NOT FOUND');
    PUT SKIP LIST('PLEASE CORRECT THE INPUT.');
END TEST_CASE_5;

/* Test Case 6: Exit Program */
DECLARE TEST_CASE_6 PROCEDURE;
    DECLARE WS_USER_INPUT CHAR(2) INIT('03'); /* PF3 Key */

    /* Expected Output */
    PUT SKIP LIST('RETURNING TO MENU PROGRAM...');
END TEST_CASE_6;

/* Run all test cases */
CALL TEST_CASE_1;
CALL TEST_CASE_2;
CALL TEST_CASE_3;
CALL TEST_CASE_4;
CALL TEST_CASE_5;
CALL TEST_CASE_6;